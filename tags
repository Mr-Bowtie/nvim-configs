!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/admin/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
<C-b>	plugin/spotify.vim	/^nnoremap <C-b> :SpotifyPrev<CR>$/;"	m
<C-f>	plugin/spotify.vim	/^nnoremap <C-f> :SpotifyNext<CR>$/;"	m
<C-n>	plugin/nerdtree.vim	/^nnoremap <C-n> :NERDTreeToggle<CR>$/;"	m
<C-p>	plugin/spotify.vim	/^nnoremap <C-p> :SpotifyToggle <CR>$/;"	m
<leader>.	plugin/telescope.vim	/^nnoremap <leader>. :lua require('telescope.builtin').find_files({prompt_title = "< Configs >", c/;"	m
<leader>S	plugin/spectre.vim	/^nnoremap <leader>S :lua require('spectre').open()<CR>$/;"	m
<leader>ga	plugin/fugitive.vim	/^nnoremap <leader>ga :Git add % <cr>$/;"	m
<leader>gq	plugin/fugitive.vim	/^nnoremap <leader>gq :Git add % <bar> Git commit <cr> $/;"	m
<leader>gs	plugin/fugitive.vim	/^nnoremap <leader>gs :Git status <CR>$/;"	m
<leader>ra	plugin/vim_rspec.vim	/^nnoremap <leader>ra :call RunAllSpecs()<CR>$/;"	m
<leader>rc	plugin/vim_rspec.vim	/^nnoremap <leader>rc :call RunCurrentSpecFile()<CR>$/;"	m
<leader>rl	plugin/vim_rspec.vim	/^nnoremap <leader>rl :call RunLastSpec()<CR>$/;"	m
<leader>rn	plugin/vim_rspec.vim	/^nnoremap <leader>rn :call RunNearestSpec()<CR>$/;"	m
<leader>sw	plugin/spectre.vim	/^nnoremap <leader>sw :lua require('spectre').open_visual({select_word=true})<CR>$/;"	m
<leader>tb	plugin/telescope.vim	/^nnoremap <leader>tb :lua require('telescope.builtin').buffers()<CR>$/;"	m
<leader>tc	plugin/telescope.vim	/^nnoremap <leader>tc :lua require('telescope.builtin').find_files({prompt_title = "< Configs >", /;"	m
<leader>td	plugin/telescope.vim	/^nnoremap <leader>td :lua require('telescope.builtin').lsp_definitions()<CR>$/;"	m
<leader>te	plugin/telescope.vim	/^nnoremap <leader>te :lua require('telescope.builtin').lsp_document_diagnostics()<CR>$/;"	m
<leader>tf	plugin/telescope.vim	/^nnoremap <leader>tf :lua require('telescope.builtin').find_files({})<cr>$/;"	m
<leader>tg	plugin/telescope.vim	/^nnoremap <leader>tg :lua require('telescope.builtin').live_grep()<CR>$/;"	m
<leader>tgs	plugin/telescope.vim	/^nnoremap <leader>tgs :lua require('telescope.builtin').git_status()<CR>$/;"	m
<leader>th	plugin/telescope.vim	/^nnoremap <leader>th :lua require('telescope.builtin').help_tags()<CR>$/;"	m
<leader>tr	plugin/telescope.vim	/^nnoremap <leader>tr :lua require('telescope.builtin').lsp_references()<CR>$/;"	m
<leader>tws	plugin/telescope.vim	/^nnoremap <leader>tws :lua require('telescope.builtin').lsp_workspace_symbols()<CR>$/;"	m
K	plugin/lsp.vim	/^nnoremap <silent> K <cmd>lua vim.lsp.buf.hover()<CR>$/;"	m
expand	lua/mr_bowtie/cmp.lua	/^        expand = function(args)$/;"	f
g:UltiSnipsExpandTrigger	plugin/ultisnips.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugin/ultisnips.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugin/ultisnips.vim	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:rspec_command	plugin/vim_rspec.vim	/^let g:rspec_command = "vsplit | terminal rspec {spec}"$/;"	v
g:rufo_auto_formatting	plugin/rufo.vim	/^let g:rufo_auto_formatting = 1$/;"	v
g:sneak#label	plugin/sneak.vim	/^let g:sneak#label = 1$/;"	v
g:sneak#prompt	plugin/sneak.vim	/^let g:sneak#prompt = 'ðŸ”Ž'$/;"	v
g:sneak#s_next	plugin/sneak.vim	/^let g:sneak#s_next =1$/;"	v
g:sneak#use_ic_scs	plugin/sneak.vim	/^let g:sneak#use_ic_scs = 1$/;"	v
gS	plugin/sneak.vim	/^map gS <Plug>Sneak_,$/;"	m
gs	plugin/sneak.vim	/^map gs <Plug>Sneak_;$/;"	m
map	lua/mr_bowtie/remap_template.lua	/^local function map(mode, lhs, rhs, opts)$/;"	f
mapleader	init.vim	/^let mapleader = " "$/;"	v
source_lua_files	init_migration.lua	/^local function source_lua_files()$/;"	f
